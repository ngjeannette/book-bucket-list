{"version":3,"sources":["bookcover.jpg","firebase.js","Registerpage.js","Loginpage.js","Searchtitle.js","Wishlist.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","layout","labelCol","span","wrapperCol","tailLayout","offset","RegisterPage","props","useState","success","setSuccess","fail","setFail","duplicate","setDuplicate","checkDuplicate","value","valueBoolean","database","ref","push","addFireBase","checkFireBase","on","snapshot","i","val","username","className","name","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","label","rules","required","message","autoComplete","Password","type","htmlType","LoginPage","updateValue","empty","updateLogin","checkFireBaseMatches","password","SearchTitle","results","setResults","useEffect","searchItem","genre","searchItemQuery","split","join","url","fetch","then","response","text","contents","parseString","require","err","result","resultArray","GoodreadsResponse","search","work","catch","checkLoggedIn","list","passObject","Object","keys","userData","length","firebasekey","userId","id","placement","notification","description","openNotificationWithIconSuccess","set","newProp","updateUserData","warning","openNotificationWithIconFail","map","item","index","resultArrayRating","average_rating","resultArrayAuthor","best_book","author","resultArrayTitle","title","resultArrayId","_","resultArrayImage","image_url","resultArrayYear","original_publication_year","rating","image","year","hoverable","style","width","key","cover","alt","src","Meta","onClick","MehOutlined","WishList","entries","book","icon","CloseCircleOutlined","wishlistid","remove","HomePage","updateTab","bookcover","App","tab","setTab","setUserData","setGenre","setList","href","target","rel","BulbOutlined","Search","placeholder","onSearch","allowClear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.a7f7b175.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookcover.cbdaca4a.jpg\";","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyC6tt__P8yElYppuEE-N7ha5OSqp3UJ-D4\",\r\n    authDomain: \"books-e6a5b.firebaseapp.com\",\r\n    databaseURL: \"https://books-e6a5b.firebaseio.com\",\r\n    projectId: \"books-e6a5b\",\r\n    storageBucket: \"books-e6a5b.appspot.com\",\r\n    messagingSenderId: \"45951011207\",\r\n    appId: \"1:45951011207:web:d2dc2374f7fe649d3fab22\",\r\n    measurementId: \"G-1NMMRF7QKB\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Input, Button, Form, Alert } from \"antd\";\r\nimport firebase from \"./firebase.js\";\r\n\r\n// check if there are duplicate username created on firebase\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const [success, setSuccess] = useState(false);\r\n  const [fail, setFail] = useState(false);\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    checkFireBase(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    setSuccess(false);\r\n    setFail(true);\r\n    setDuplicate(false);\r\n  };\r\n\r\n  let addFireBase = (value) => {\r\n    const itemsRef = firebase.database().ref(\"items\");\r\n    itemsRef.push(value);\r\n  };\r\n\r\n  // if there are duplicates username, do not create a new acc\r\n  // if there are no duplicate username, do createa a new acc\r\n\r\n  let checkDuplicate = (value, valueBoolean) => {\r\n    if (!valueBoolean) {\r\n      addFireBase(value);\r\n      setSuccess(true);\r\n      setFail(false);\r\n      setDuplicate(false);\r\n    } else {\r\n      setSuccess(false);\r\n      setFail(false);\r\n      setDuplicate(true);\r\n    }\r\n  };\r\n\r\n  let checkFireBase = (value) => {\r\n    const itemsRef = firebase.database().ref(\"items\");\r\n    itemsRef.on(\"value\", (snapshot) => {\r\n      for (let i in snapshot.val()) {\r\n        if (snapshot.val()[i].username === value.username) {\r\n          checkDuplicate(value, true);\r\n          return;\r\n        }\r\n      }\r\n      checkDuplicate(value, false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"register-section\">\r\n        <div className=\"register\">\r\n          <h2>Register Account</h2>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input autoComplete=\"username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password autoComplete=\"current-password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {success && <Alert message=\"Created Account\" type=\"success\" />}\r\n          {fail && <Alert message=\"Something's missing 🙃\" type=\"warning\" />}\r\n          {duplicate && (\r\n            <Alert message=\"Username's already taken 🙃\" type=\"warning\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default RegisterPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Input, Button, Form, Alert } from \"antd\";\r\nimport firebase from \"./firebase.js\";\r\n\r\n// check if logins match a firebase database\r\n// return the matching login id/entire object to the app.js\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction LoginPage(props) {\r\n  const [success, setSuccess] = useState(false);\r\n  const [fail, setFail] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    // check if ther are any matches\r\n    checkFireBaseMatches(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    setSuccess(false);\r\n    setFail(true);\r\n  };\r\n\r\n  const updateValue = (value, i) => {\r\n    let empty = {};\r\n    empty[i] = value;\r\n    props.updateLogin(empty);\r\n    setSuccess(true);\r\n    setFail(false);\r\n  };\r\n\r\n  const checkFireBaseMatches = (value) => {\r\n    const itemsRef = firebase.database().ref(\"items\");\r\n    itemsRef.on(\"value\", (snapshot) => {\r\n      for (let i in snapshot.val()) {\r\n        if (\r\n          snapshot.val()[i].username === value.username &&\r\n          snapshot.val()[i].password === value.password\r\n        ) {\r\n          // return the value\r\n          updateValue(snapshot.val()[i], i);\r\n          return;\r\n        }\r\n      }\r\n      setSuccess(false);\r\n      setFail(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"register-section\">\r\n        <div className=\"register\">\r\n          <h2>Login Account</h2>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input autoComplete=\"username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password autoComplete=\"current-password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {success && <Alert message=\"Logged In\" type=\"success\" />}\r\n          {fail && <Alert message=\"Incorrect Login🙃\" type=\"warning\" />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport firebase from \"./firebase.js\";\r\nimport { Card, Empty, Button, notification, Space } from \"antd\";\r\nimport { MehOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction SearchTitle(props) {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    const searchItem = props.genre;\r\n    const searchItemQuery = searchItem.split(\" \").join(\"+\");\r\n\r\n    if (searchItem) {\r\n      const url = `https://www.goodreads.com/search.xml?key=kPemw6gKMzdYeiIV0Hq7Q&q=${searchItemQuery}`; // site that doesn’t send Access-Control-*\r\n      // const url = `https://www.goodreads.com/search.xml?key=Pxtu7Nee7I1NUohE6hjBuA&q=${searchItemQuery}`; // site that doesn’t send Access-Control-*\r\n      fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\r\n        .then((response) => response.text())\r\n        .then((contents) => {\r\n          var parseString = require(\"xml2js\").parseString;\r\n          var xml = contents;\r\n          parseString(xml, function (err, result) {\r\n            let resultArray =\r\n              result.GoodreadsResponse.search[0].results[0].work;\r\n            setResults(resultArray);\r\n          });\r\n        })\r\n        .catch();\r\n    }\r\n  }, [props.genre]);\r\n\r\n  useEffect(() => {}, [results]);\r\n\r\n  const openNotificationWithIconSuccess = (placement, list) => {\r\n    notification.success({\r\n      message: `Added to ${list}`,\r\n      description: \"Good pick!\",\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const openNotificationWithIconFail = (placement, list) => {\r\n    notification.warning({\r\n      message: `Couldn't add to ${list}`,\r\n      description: `Please login or register an account to add onto a ${list}`,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const checkLoggedIn = (list, passObject) => {\r\n    if (Object.keys(props.userData).length > 0) {\r\n      let firebasekey = Object.keys(props.userData)[0];\r\n      let userId = passObject.id;\r\n      openNotificationWithIconSuccess(\"bottomRight\", list);\r\n      if (props.userData[firebasekey][list]) {\r\n        props.userData[firebasekey][list][userId] = passObject;\r\n      } else {\r\n        props.userData[firebasekey][list] = {};\r\n        props.userData[firebasekey][list][userId] = passObject;\r\n      }\r\n      var db = firebase.database();\r\n      db.ref(`items/${firebasekey}/${list}/${userId}`).set(passObject);\r\n      let newProp = {};\r\n      const itemsRef = firebase.database().ref(\"items\");\r\n      // if value matches anything in the snapshot.val(())\r\n      itemsRef.on(\"value\", (snapshot) => {\r\n        for (let i in snapshot.val()) {\r\n          if (i === firebasekey) {\r\n            newProp[i] = snapshot.val()[i];\r\n          }\r\n        }\r\n      });\r\n\r\n      props.updateUserData(newProp);\r\n    } else {\r\n      openNotificationWithIconFail(\"bottomRight\", list);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-section\">\r\n        <h1>{props.genre}</h1>\r\n        <div className=\"row1 search\">\r\n          <div className=\"item-card\">\r\n            {results ? (\r\n              results.map((item, index) => {\r\n                const resultArrayRating = item.average_rating;\r\n                const resultArrayAuthor = item.best_book[0].author[0].name;\r\n                const resultArrayTitle = item.best_book[0].title;\r\n                const resultArrayId = item.best_book[0].id[0]._;\r\n                const resultArrayImage = item.best_book[0].image_url[0];\r\n                const resultArrayYear = item.original_publication_year[0]._;\r\n                let passObject = {};\r\n                passObject.rating = resultArrayRating;\r\n                passObject.title = resultArrayTitle;\r\n                passObject.image = resultArrayImage;\r\n                passObject.year = resultArrayYear;\r\n                passObject.id = resultArrayId;\r\n                passObject.author = resultArrayAuthor;\r\n\r\n                return (\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: 300 }}\r\n                    key={index}\r\n                    cover={<img alt=\"example\" src={resultArrayImage} />}\r\n                  >\r\n                    <Card.Meta title={resultArrayTitle} />\r\n                    <Button\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        checkLoggedIn(\"wishlist\", passObject);\r\n                      }}\r\n                    >\r\n                      + WishList\r\n                    </Button>\r\n                    <Button\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        checkLoggedIn(\"havelist\", passObject);\r\n                      }}\r\n                    >\r\n                      + Have List\r\n                    </Button>\r\n                    <Card.Meta description={`by ${resultArrayAuthor}`} />\r\n                    <Card.Meta description={`${resultArrayRating}/5`} />\r\n                    {resultArrayYear && (\r\n                      <Card.Meta\r\n                        description={`Published on ${resultArrayYear}`}\r\n                      />\r\n                    )}\r\n                  </Card>\r\n                );\r\n              })\r\n            ) : (\r\n              <div>\r\n                <Empty />\r\n                <span>Couldn't find any books with {props.genre}</span>\r\n                <MehOutlined />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Space></Space>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchTitle;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport firebase from \"./firebase.js\";\r\nimport { Empty, Button } from \"antd\";\r\nimport { MehOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\n// wish list will display passed data + be able to remove + pass it back up\r\n\r\nfunction WishList(props) {\r\n  let removeItem = (total, firebasekey, wishlistid) => {\r\n    const removeRef = firebase\r\n      .database()\r\n      .ref(`items/${firebasekey}/${props.title}/${wishlistid}`);\r\n    removeRef\r\n      .remove()\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"list-section\">\r\n        <h1>{props.title}</h1>\r\n        <div className=\"list\">\r\n          {props.userData &&\r\n          Object.values(props.userData)[0] &&\r\n          Object.values(props.userData)[0][props.title] &&\r\n          Object.values(Object.values(props.userData)[0][props.title]).length >\r\n            0 ? (\r\n            <>\r\n              <div className=\"list-item-header\">\r\n                <div>\r\n                  <span>Item</span>\r\n                </div>\r\n              </div>\r\n              {Object.entries(props.userData).map(([key, item]) => {\r\n                return Object.values(item[props.title]).map((book, index) => {\r\n                  return (\r\n                    <div className=\"list-item-item\" key={index}>\r\n                      <div className=\"item-info\">\r\n                        <div>\r\n                          <img src={book.image} alt={book.title} />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"list-title\">{book.title} </h3>\r\n                          <p>by: {book.author} </p>\r\n                          <p>published on: {book.year} </p>\r\n                          <p>ratings: {book.rating} / 5 </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"remove\">\r\n                        <Button\r\n                          type=\"danger\"\r\n                          icon={<CloseCircleOutlined />}\r\n                          onClick={() => {\r\n                            removeItem(props.userData, key, book.id);\r\n                          }}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                });\r\n              })}\r\n            </>\r\n          ) : (\r\n            <div className=\"empty-book-section\">\r\n              <Empty />\r\n              <span>Your {props.title} is empty</span>\r\n              <MehOutlined />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport bookcover from \"./bookcover.jpg\";\r\nimport { Button } from \"antd\";\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <>\r\n      <div className=\"home-section\">\r\n        <div className=\"homedescription\">\r\n          <p>Sign up and login to save books for you wishlist and havelist.</p>\r\n          <p>\r\n            Search for books from GoodRead's, with over 2.6 billion book\r\n            selections!\r\n          </p>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"homedescriptionregister\"\r\n            onClick={() => {\r\n              props.updateTab(\"register\");\r\n            }}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => {\r\n              props.updateTab(\"login\");\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </div>\r\n        <div className=\"bookimage\">\r\n          <img src={bookcover} alt=\"books\" className=\"bookimagecover\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { BulbOutlined } from \"@ant-design/icons\";\nimport RegisterPage from \"./Registerpage.js\";\nimport LoginPage from \"./Loginpage.js\";\nimport SearchTitle from \"./Searchtitle.js\";\nimport WishList from \"./Wishlist\";\nimport HomePage from \"./Homepage\";\n\nfunction App() {\n  const [tab, setTab] = useState(\"home\");\n  const [userData, setUserData] = useState({});\n  const [genre, setGenre] = useState(\"\");\n  const [list, setList] = useState(\"\");\n\n  useEffect(() => {}, [userData]);\n\n  let updateLogin = (value) => {\n    setUserData(value);\n  };\n\n  let updateUserData = (value) => {\n    setUserData(value);\n  };\n\n  let updateTab = (value) => {\n    setTab(value);\n  };\n\n  return (\n    <>\n      <div className=\"navBar\">\n        <div className=\"navBar-header\">\n          <h1\n            onClick={() => {\n              setTab(\"home\");\n            }}\n          >\n            Project 3: Book Bucket List\n          </h1>\n          <a\n            href=\"https://flaviocopes.com/sample-app-ideas/#a-book-database\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <BulbOutlined />\n          </a>\n        </div>\n        <div className=\"signup-login\">\n          <Button\n            type=\"text\"\n            onClick={() => {\n              setTab(\"register\");\n            }}\n          >\n            Register\n          </Button>\n          <Button\n            type=\"text\"\n            onClick={() => {\n              setTab(\"login\");\n            }}\n          >\n            Login\n          </Button>\n          <Button\n            type=\"text\"\n            onClick={() => {\n              setTab(\"wishlist\");\n              setList(\"wishlist\");\n            }}\n          >\n            WishList\n          </Button>\n          <Button\n            type=\"text\"\n            onClick={() => {\n              setTab(\"wishlist\");\n              setList(\"havelist\");\n            }}\n          >\n            HaveList\n          </Button>\n        </div>\n      </div>\n      <div className=\"genre-section\">\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Harry Potter\");\n          }}\n        >\n          Harry Potter\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Pride and Prejudice\");\n          }}\n        >\n          Pride and Prejudice\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"The Book Thief\");\n          }}\n        >\n          The Book Thief\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"1984\");\n          }}\n        >\n          1984\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(`Handmaid's Tale`);\n          }}\n        >\n          Handmaid's Tale\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Watership Down\");\n          }}\n        >\n          Watership Down\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Game of Thrones\");\n          }}\n        >\n          Game of Thrones\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Les Miserables\");\n          }}\n        >\n          Les Miserables\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Lord of the Flies\");\n          }}\n        >\n          Lord of the Flies\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setTab(\"populartitle\");\n            setGenre(\"Hunger Games\");\n          }}\n        >\n          Hunger Games\n        </Button>\n      </div>\n      <div className=\"search-section\">\n        <Input.Search\n          placeholder=\"search books\"\n          onSearch={(value) => {\n            setTab(\"populartitle\");\n            setGenre(value);\n          }}\n          allowClear\n        />\n      </div>\n      <div className=\"content-section\">\n        {tab === \"register\" && <RegisterPage />}\n        {tab === \"login\" && <LoginPage updateLogin={updateLogin} />}\n        {tab === \"populartitle\" && (\n          <SearchTitle\n            genre={genre}\n            userData={userData}\n            updateUserData={updateUserData}\n          />\n        )}\n        {tab === \"wishlist\" && <WishList userData={userData} title={list} />}\n        {tab === \"home\" && <HomePage updateTab={updateTab} />}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}